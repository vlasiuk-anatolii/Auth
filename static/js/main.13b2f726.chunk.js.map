{"version":3,"sources":["api.tsx","components/Logo/Logo.tsx","components/SignUp/SignUp.tsx","components/SignIn/SignIn.tsx","components/Home/Home.tsx","App.tsx","index.tsx"],"names":["BASE_URL","registerUser","password","username","displayName","a","fetch","method","headers","body","JSON","stringify","logOut","response","logIn","Logo","className","SignUp","useState","setPassword","isPasswordRight","setIsPasswordRight","userName","setUserName","isUsernameRight","setIsUsernameRight","setDisplayName","isDisplayNameRight","setIsDisplayNameRight","isPasswordVisible","setIsPasswordVisible","isUserNameExist","setIsUserNameExist","error","setError","navigate","useNavigate","regUser","ok","replace","status","statusText","theme","createTheme","palette","mode","primary","main","typography","fontFamily","ThemeProvider","FormControl","TextField","sx","marginBottom","label","variant","color","placeholder","value","helperText","length","onChange","event","target","InputLabel","left","htmlFor","Input","id","type","endAdornment","InputAdornment","position","IconButton","padding","aria-label","onClick","Visibility","VisibilityOff","test","to","SignIn","handlerForm","console","log","components","MuiInputBase","styleOverrides","root","onSubmit","Home","handlerOnClick","Error","alt","src","App","path","element","Root","StrictMode","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.13b2f726.chunk.js","sourcesContent":["export const BASE_URL = 'https://incode-backend-dev.herokuapp.com/';\n\nexport async function registerUser(password: unknown, username: string, displayName: string) {\n  return fetch(`${BASE_URL}auth/register`, {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify({\n      password,\n      username,\n      displayName,\n    }),\n  });\n}\n\nexport async function logOut() {\n  const response = await fetch(`${BASE_URL}api/#/auth/AuthController_logout`);\n\n  return response;\n}\n\nexport async function logIn(username: string, password: unknown) {\n  return fetch(`${BASE_URL}auth/login`, {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify({\n      username,\n      password,\n    }),\n  });\n}\n","import React from 'react';\nimport './Logo.scss';\n\nfunction Logo() {\n  return (\n    <div className=\"logobox\">\n      <p className=\"logobox__title\">Orion</p>\n      <p className=\"logobox__subtitle\">Sport</p>\n    </div>\n  );\n}\n\nexport default Logo;\n","import { NavLink, useNavigate } from 'react-router-dom';\nimport React, { useState } from 'react';\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\nimport {\n  FormControl,\n  IconButton,\n  ThemeProvider,\n  createTheme,\n  InputLabel,\n  InputAdornment,\n  Input,\n  TextField,\n} from '@mui/material';\nimport { registerUser } from '../../api';\nimport Logo from '../Logo/Logo';\nimport './SignUp.scss';\n\nexport function SignUp() {\n  const [password, setPassword] = useState('');\n  const [isPasswordRight, setIsPasswordRight] = useState('');\n  const [userName, setUserName] = useState('');\n  const [isUsernameRight, setIsUsernameRight] = useState('');\n  const [displayName, setDisplayName] = useState('');\n  const [isDisplayNameRight, setIsDisplayNameRight] = useState('');\n  const [isPasswordVisible, setIsPasswordVisible] = useState(false);\n  const [isUserNameExist, setIsUserNameExist] = useState(false);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  const regUser = async () => {\n    const response = await registerUser(password, userName, displayName);\n\n    if (!response.ok) {\n      if (response.status === 409) {\n        setIsUserNameExist(true);\n      } else {\n        setError(`${response.statusText}`);\n      }\n    } else {\n      setIsUserNameExist(false);\n      setPassword('');\n      setUserName('');\n      setDisplayName('');\n      navigate('/home', { replace: true });\n    }\n  };\n\n  const handlerForm = () => {\n    if (userName.length === 0) {\n      setIsDisplayNameRight('You should fill field User Name');\n    } else {\n      setIsDisplayNameRight('');\n    }\n\n    if (displayName.length === 0) {\n      setIsDisplayNameRight('You should fill field Display Name');\n    } else {\n      setIsDisplayNameRight('');\n    }\n\n    if (!(/.{8,}/g).test(password)) {\n      setIsPasswordRight('Password should contain not less 8 characters');\n    } else {\n      setIsPasswordRight('');\n    }\n\n    if (!(/[a-zA-Z\\s]/g).test(userName)) {\n      setIsUsernameRight('Username should contain only letters');\n    } else {\n      setIsUsernameRight('');\n    }\n\n    regUser();\n  };\n\n  const theme = createTheme({\n    palette: {\n      mode: 'dark',\n      primary: {\n        main: '#fff',\n      },\n    },\n    typography: {\n      fontFamily: 'Montserrat',\n    },\n  });\n\n  return (\n    <>\n      <section className=\"signup\">\n        <Logo />\n        <p className=\"signup__title\">SIGN UP</p>\n        {error && <p className=\"signup__errorfromserver\">{error}</p>}\n        <ThemeProvider theme={theme}>\n          <FormControl\n            className=\"signup__form\"\n          >\n            <TextField\n              sx={{ marginBottom: '20px' }}\n              label={isUserNameExist ? 'Username is already exist' : 'User Name'}\n              variant=\"standard\"\n              color=\"primary\"\n              placeholder=\"Example Name\"\n              value={userName}\n              helperText={isUsernameRight.length === 0 ? '' : `${isUsernameRight}`}\n              onChange={(event) => {\n                setUserName(event.target.value);\n              }}\n            />\n\n            <TextField\n              sx={{ marginBottom: '20px' }}\n              label=\"Display Name\"\n              variant=\"standard\"\n              color=\"primary\"\n              placeholder=\"Example123\"\n              value={displayName}\n              helperText={isDisplayNameRight.length === 0 ? '' : `${isDisplayNameRight}`}\n              onChange={(event) => {\n                setDisplayName(event.target.value);\n              }}\n            />\n\n            <FormControl>\n              <InputLabel sx={{ left: '-13px' }} htmlFor=\"standard-adornment-password\">\n                Password\n              </InputLabel>\n              <Input\n                id=\"standard-adornment-password\"\n                type={isPasswordVisible ? 'text' : 'password'}\n                value={password}\n                placeholder=\"∗∗∗∗∗∗∗∗∗∗∗∗∗∗∗\"\n                onChange={(event) => {\n                  setPassword(event.target.value);\n                }}\n                endAdornment={(\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      sx={{ padding: '0' }}\n                      aria-label=\"toggle password visibility\"\n                      onClick={() => {\n                        (\n                          setIsPasswordVisible(!isPasswordVisible)\n                        );\n                      }}\n                    >\n                      {!isPasswordVisible ? <VisibilityOff /> : <Visibility />}\n                    </IconButton>\n                  </InputAdornment>\n                )}\n              />\n              {isPasswordRight.length !== 0 && <p className=\"signup__errorpassword\">{isPasswordRight}</p>}\n              <button\n                type=\"button\"\n                className=\"signup__button\"\n                onClick={() => {\n                  handlerForm();\n                }}\n              >\n                <span className=\"signup__buttonname\">Sign Up</span>\n              </button>\n            </FormControl>\n\n            <p className=\"signup__undernotice signup__undernotice--up\">\n              I have an account.\n              {' '}\n              <NavLink to=\"/auth/login\" className=\"signup__newaccount\">Go to Sign in</NavLink>\n            </p>\n          </FormControl>\n        </ThemeProvider>\n      </section>\n    </>\n  );\n}\n","import { NavLink, useNavigate } from 'react-router-dom';\nimport React, { useState } from 'react';\n\nimport './SignIn.scss';\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\nimport {\n  FormControl,\n  IconButton,\n  ThemeProvider,\n  createTheme,\n  InputLabel,\n  InputAdornment,\n  Input,\n  TextField,\n} from '@mui/material';\n\nimport { logIn } from '../../api';\nimport Logo from '../Logo/Logo';\n\nexport function SignIn() {\n  const [password, setPassword] = useState('');\n  const [userName, setUserName] = useState('');\n  const [isPasswordVisible, setIsPasswordVisible] = useState(false);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  const handlerForm = async () => {\n    if (password && userName) {\n      const response = await logIn(userName, password);\n\n      // eslint-disable-next-line no-console\n      console.log(response);\n\n      if (!response.ok) {\n        setError('The username or password is invalid');\n      //  throw new Error(`${response.status} - ${response.statusText}`);\n      } else {\n        setPassword('');\n        setUserName('');\n        navigate('/home', { replace: true });\n      }\n    }\n  };\n\n  const theme = createTheme({\n    palette: {\n      mode: 'dark',\n      primary: {\n        main: '#ffffff',\n      },\n    },\n    typography: {\n      fontFamily: 'Montserrat',\n    },\n    components: {\n      MuiInputBase: {\n        styleOverrides: {\n          root: {\n            marginBottom: '35px',\n          },\n        },\n      },\n    },\n  });\n\n  return (\n    <>\n      <section className=\"signin\">\n        <Logo />\n        <p className=\"signin__title\">SIGN IN</p>\n        <ThemeProvider theme={theme}>\n          <FormControl onSubmit={handlerForm} className=\"signin__form\">\n            <FormControl>\n              <TextField\n                label=\"User Name\"\n                variant=\"standard\"\n                color=\"primary\"\n                placeholder=\"Example123\"\n                value={userName}\n                onChange={(event) => {\n                  setUserName(event.target.value);\n                }}\n              />\n            </FormControl>\n\n            <FormControl>\n              <InputLabel sx={{ left: '-13px' }} htmlFor=\"standard-adornment-password\">Password</InputLabel>\n              <Input\n                id=\"standard-adornment-password\"\n                type={isPasswordVisible ? 'text' : 'password'}\n                value={password}\n                placeholder=\"∗∗∗∗∗∗∗∗∗∗∗∗∗∗∗\"\n                onChange={(event) => {\n                  setPassword(event.target.value);\n                }}\n                endAdornment={(\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      sx={{ padding: '0' }}\n                      aria-label=\"toggle password visibility\"\n                      onClick={() => {\n                        (\n                          setIsPasswordVisible(!isPasswordVisible)\n                        );\n                      }}\n                    >\n                      {!isPasswordVisible ? <VisibilityOff /> : <Visibility />}\n                    </IconButton>\n                  </InputAdornment>\n                )}\n              />\n            </FormControl>\n\n            <button\n              type=\"button\"\n              className=\"signin__button\"\n              onClick={() => {\n                handlerForm();\n              }}\n            >\n              <span className=\"signin__buttonname\">Sign In</span>\n            </button>\n            <p className=\"signin__undernotice signin__undernotice--in\">\n              Don&apos;t have account yet?\n              {' '}\n              <NavLink to=\"/auth/register\" className=\"signin__newaccount\">New Account</NavLink>\n            </p>\n          </FormControl>\n          {error.length ? (\n            <span className=\"signin__error\">\n              {error}\n            </span>\n          ) : ''}\n        </ThemeProvider>\n      </section>\n    </>\n  );\n}\n","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport { logOut } from '../../api';\nimport Logo from '../Logo/Logo';\nimport './Home.scss';\n\nexport function Home() {\n  const navigate = useNavigate();\n  const handlerOnClick = async () => {\n    const response = await logOut();\n\n    if (!response.ok) {\n      throw new Error(`${response.status} - ${response.statusText}`);\n    } else {\n      navigate('/auth/login', { replace: true });\n    }\n  };\n\n  return (\n    <section className=\"home\">\n      <Logo />\n      <img\n        alt=\"congratulation\"\n        className=\"home__congratmainimg\"\n        src=\"./images/congrat.png\"\n      />\n\n      <p className=\"home__congrattext\">Now you are on the main page. Soon we will provide you with detailed feedback on the result of your work</p>\n      <button\n        type=\"button\"\n        className=\"home__button home__button--congrat\"\n        onClick={() => {\n          handlerOnClick();\n        }}\n      >\n        <span className=\"home__buttonname\">See you</span>\n      </button>\n      <img\n        alt=\"congratulation people\"\n        className=\"home__congratpeopleimg\"\n        src=\"./images/people.svg\"\n      />\n    </section>\n  );\n}\n","import React from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport './App.scss';\nimport { SignUp } from './components/SignUp/SignUp';\nimport { SignIn } from './components/SignIn/SignIn';\nimport { Home } from './components/Home/Home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Routes>\n        <Route path=\"/\" element={<SignUp />} />\n        <Route path=\"/auth/register\" element={<SignUp />} />\n        <Route path=\"/auth/login\" element={<SignIn />} />\n        <Route path=\"/home\" element={<Home />} />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport { HashRouter } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\n\nimport App from './App';\n\nexport const Root = () => (\n  <HashRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </HashRouter>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}